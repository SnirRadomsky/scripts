#!/bin/bash

# install_aliases.sh - Script to add all aliases to .zshrc
# This script backs up your current .zshrc and adds all the aliases from this scripts collection

ZSHRC_FILE="$HOME/.zshrc"
BACKUP_FILE="$HOME/.zshrc.backup.$(date +%Y%m%d_%H%M%S)"
SCRIPTS_DIR="$HOME/scripts"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}📦 Installing aliases from scripts collection...${NC}"

# Create backup
if [ -f "$ZSHRC_FILE" ]; then
    echo -e "${YELLOW}📋 Creating backup of .zshrc at: $BACKUP_FILE${NC}"
    cp "$ZSHRC_FILE" "$BACKUP_FILE"
else
    echo -e "${YELLOW}⚠️  No existing .zshrc found, creating new one${NC}"
    touch "$ZSHRC_FILE"
fi

# Check if aliases section already exists
if grep -q "# === SCRIPTS COLLECTION ALIASES ===" "$ZSHRC_FILE"; then
    echo -e "${YELLOW}⚠️  Scripts collection aliases already exist in .zshrc${NC}"
    echo -e "${YELLOW}   Remove existing section first or restore from backup${NC}"
    exit 1
fi

# Add aliases to .zshrc
echo -e "${GREEN}✍️  Adding aliases to .zshrc...${NC}"

cat >> "$ZSHRC_FILE" << 'EOF'

# === SCRIPTS COLLECTION ALIASES ===
# Auto-generated by install_aliases.sh

# Network and Connection Aliases
alias wifiConnect="/Users/snirradomsky/scripts/wifi_connect.sh"
alias wificonnect=wifiConnect
alias wireless-scrcpy="~/scripts/wireless_scrcpy.sh"
alias transfer-files="~/scripts/file_transfer.sh"
alias quick-reconnect="~/scripts/quick_reconnect.sh"
alias check-connection="~/scripts/connection_health.sh"

# Development Environment Aliases
alias iterm='function _iterm() { open -a "iTerm" "$1"; };_iterm'
alias idea='idea > /dev/null 2>&1'
alias node18="$HOME/.nvm/versions/node/v18.12.1/bin/node"
alias npm18="$HOME/.nvm/versions/node/v18.12.1/bin/npm"
alias npx18="$HOME/.nvm/versions/node/v18.12.1/bin/npx"

# Database and Data Management Aliases
alias ts-dump='/Users/snirradomsky/workspace/ido-server/env/ci/integration-tests/tools/mongo/ts-dump.sh'
alias ts-restore='/Users/snirradomsky/workspace/ido-server/env/ci/integration-tests/tools/mongo/ts-restore.sh'
alias ts-truncate='/Users/snirradomsky/workspace/ido-server/env/ci/integration-tests/tools/ts-truncate.sh'
alias json-dump='/Users/snirradomsky/scripts/json-dump/json-dump.sh'
alias json-restore='/Users/snirradomsky/scripts/json-dump/json-restore.sh'
alias tenant-dump='/Users/snirradomsky/scripts/tenant-dump.sh'
alias tenant-restore='/Users/snirradomsky/scripts/tenant-restore.sh'

# Environment Configuration Aliases
alias replaceEnv='sed -i "" "s|VITE_IDO_SERVER_URL=\"https://api.idsec-stg.com/ido\"|VITE_IDO_SERVER_URL=\"http://localhost:8080/ido\"|g" .env && sed -i "" "s|VITE_CLIENT_ID=\"The client ID of your admin portal application\"|VITE_CLIENT_ID=\"3uhhljh4cqd7ip5hyecw9wx4javi3gzo\"|g" .env'
alias codegenRun="sed -i '' 's|VITE_SERVER_PATH=\"https://api.idsec-stg.com/ido\"|VITE_SERVER_PATH=\"http://localhost:8080/ido\"|g' .env && sed -i '' 's|VITE_CLIENT_ID=\"The client ID of your admin portal application\"|VITE_CLIENT_ID=\"3uhhljh4cqd7ip5hyecw9wx4javi3gzo\"|g' .env && npm i && npm run start"
alias codegenRunNew="sed -i '' 's|VITE_IDO_SERVER_URL=\"https://api.idsec-stg.com/ido\"|VITE_IDO_SERVER_URL=\"http://localhost:8080/ido\"|g' .env && sed -i '' 's|VITE_CLIENT_ID=\"The client ID of your admin portal application\"|VITE_CLIENT_ID=\"3uhhljh4cqd7ip5hyecw9wx4javi3gzo\"|g' .env && npm i && npm run start"
alias runCodegen=codegenRunNew
alias runcodegen=runCodegen

# SSO Hosted Application Aliases
alias sso-hosted-local="cd /Users/snirradomsky/workspace/ido-sso-hosted && yarn dev"
alias sso-hosted-dev="cd /Users/snirradomsky/workspace/ido-sso-hosted && env \$(grep -v \"^#\" /Users/snirradomsky/workspace/ido-sso-hosted/.env.dev | xargs) yarn dev"
alias sso-hosted-stg="cd /Users/snirradomsky/workspace/ido-sso-hosted && env \$(grep -v \"^#\" /Users/snirradomsky/workspace/ido-sso-hosted/.env.stg | xargs) yarn dev"
alias sso-hosted-ms-sbx="cd /Users/snirradomsky/workspace/ido-sso-hosted && env \$(grep -v \"^#\" /Users/snirradomsky/workspace/ido-sso-hosted/.env.ms-sbx | xargs) yarn dev"
alias sso-hosted-sbx="cd /Users/snirradomsky/workspace/ido-sso-hosted && env \$(grep -v \"^#\" /Users/snirradomsky/workspace/ido-sso-hosted/.env.sbx | xargs) yarn dev"
alias sso-hosted-prod="cd /Users/snirradomsky/workspace/ido-sso-hosted && env \$(grep -v \"^#\" /Users/snirradomsky/workspace/ido-sso-hosted/.env.prod | xargs) yarn dev"
alias sso-hosted-prod-ca="cd /Users/snirradomsky/workspace/ido-sso-hosted && env \$(grep -v \"^#\" /Users/snirradomsky/workspace/ido-sso-hosted/.env.prod-ca | xargs) yarn dev"
alias sso-hosted-prod-eu="cd /Users/snirradomsky/workspace/ido-sso-hosted && env \$(grep -v \"^#\" /Users/snirradomsky/workspace/ido-sso-hosted/.env.prod-eu | xargs) yarn dev"
alias sso-hosted-test="cd /Users/snirradomsky/workspace/ido-sso-hosted && env \$(grep -v \"^#\" /Users/snirradomsky/workspace/ido-sso-hosted/.env.test | xargs) yarn dev"

# === END SCRIPTS COLLECTION ALIASES ===
EOF

echo -e "${GREEN}✅ Aliases successfully added to .zshrc${NC}"
echo -e "${GREEN}🔄 Reload your shell with: source ~/.zshrc${NC}"
echo -e "${YELLOW}📋 Backup saved at: $BACKUP_FILE${NC}"

# Make the script executable
chmod +x "$SCRIPTS_DIR/install_aliases.sh"

echo -e "${GREEN}🎉 Installation complete!${NC}"
echo -e "${GREEN}   Use 'source ~/.zshrc' to activate aliases in current session${NC}"
